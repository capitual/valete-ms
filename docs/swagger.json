{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/internals/partners": {
            "post": {
                "description": "Create a new partner to consuming our api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "partners"
                ],
                "summary": "New Partner",
                "parameters": [
                    {
                        "description": "Add Partner",
                        "name": "partner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.PartnerDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Partner"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            }
        },
        "/internals/partners/{id}": {
            "get": {
                "description": "get partner by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "partners"
                ],
                "summary": "Get Partner",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Partner id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Partner"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.PartnerDto": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string"
                },
                "locale": {
                    "type": "string"
                },
                "partner_name": {
                    "type": "string"
                }
            }
        },
        "handlers.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "models.Partner": {
            "type": "object",
            "required": [
                "country",
                "locale",
                "partner_id",
                "partner_key",
                "partner_name"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "country": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "locale": {
                    "type": "string",
                    "maxLength": 5,
                    "minLength": 2
                },
                "partner_id": {
                    "type": "string"
                },
                "partner_key": {
                    "type": "string"
                },
                "partner_name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "settings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.QuotasSetting"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.QuotasSetting": {
            "type": "object",
            "required": [
                "currency",
                "expires_in"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                },
                "expires_in": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "partner_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}